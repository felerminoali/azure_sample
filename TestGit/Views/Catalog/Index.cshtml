@*@model IEnumerable<TestGit.Models.item>*@
@using PagedList.Mvc;
@using PagedList;
@model IPagedList<TestGit.Models.item>
@using TestGit.Models;

@{
    ViewBag.Title = "Catalog";
    MyOpacDBContext db = new MyOpacDBContext();
}

<div class='container'>
    <div class='section friendly'>
        <h1><strong>SEARCH | </strong>&nbsp;&nbsp;&nbsp;Catalog</h1>
        <div class='article'>

            <form action="" method="get">

                <table cellpadding="0" cellspacing="0" border="0" class="tbl_insert">
                    <tr>
                        <th><label for="search">Library catalog:</label></th>
                        <td>
                            <input type="text" name="search" value="@Request.QueryString["search"]" class="fld">
                        </td>
                        <td>
                            <label for="btn_add" class="sbm sbm_blue fl_l">
                                <input type="submit" id="btn_add" class="btn" value="Search">
                            </label>
                        </td>
                    </tr>

                    <tr>
                        <th><label for="library">Library:</label></th>
                        <td>
                            @Html.DropDownList(
                                   "library",
                                   new SelectList(ViewBag.library, "id", "name", Request.QueryString["library"]),
                                   "-- All libraries --", new { @class = "sel" }
                               )
                        </td>
                    </tr>

                </table>


                @if (((List<TestGit.Models.category>)ViewBag.categories).Any())
                {
                    var values = Request.QueryString.GetValues("category");

                    foreach (string v in values)
                    {
                        <p>v</p>
                    }

                    //string[] array = str.Trim('(', ')').Split(',');

                   <h1> @*--------> @str*@</h1>


                    <ul id="filters">
                        @foreach (var category in (List<TestGit.Models.category>)ViewBag.categories)
                        {
                            <li>
                                <input type="checkbox" name="category[]"
                                       id="category_@category.id"
                                       value="@category.id" />
                                @*stick here*@
                                
                                <span>@category.name</span>
                            </li>
                        }
                    </ul>
                }

            </form>

        </div>
    </div>
</div>

@if (Model.Any())
{

    <div class="paging">
        <p>Your search found <strong>@ViewBag.recordsFound</strong> records. </p>
    </div>

    <h1></h1>

    foreach (var item in Model)
    {
        <div class="catalogue_wrapper">
            <div class="catalogue_wrapper_left">

                @{
                    string path = "media/catalogue/";
                    string path_alt = "media/unavailable/";

                    category cate = db.categories.Single(cat => cat.id == item.category);

                    //string image = path_alt + cate.image;
                    //int img_width = 0;
                    //if (item.image != null)
                    //{
                    //    image = path + item.image;
                    //    var file = new FileStream("~/"+image, FileMode.Open);
                    //    System.Drawing.Image imageObj = System.Drawing.Image.FromStream(file);

                    //    img_width = (imageObj.Width > 120) ? 120 : imageObj.Width;

                    //}

                    string image = (item.image != null) ? path + item.image : path_alt + cate.image;
                    int img_width = 120;
                }
                <a href="/catalog/item/@item.id">
                    <img src="~/@image" alt="Image_@cate.name"
                         width="@img_width" />
                </a>

            </div>
            <div class="catalogue_wrapper_right">
                <h4>
                    <a href="/?page=catalogue"></a>
                    <strong>
                        @item.title
                    </strong>
                </h4>

                @if (item.author != null)
                    {
                    <p>by: <u>@item.author</u></p>
                }



                @if (item.year != null)
                {
                    <p>@item.year</p>
                }



                @if (item.publishing_date != null)
                {
                    <p>@item.publishing_date</p>
                }


                @if (item.description != null)
                {
                    int len = 120;
                    string description = item.description;
                    if (item.description.Length > len)
                    {
                        <p>@string.Concat(description.Substring(0, len), "...")</p>
                    }
                    else
                    {
                        <p>@string.Concat(description, "...")</p>
                    }

                }

            </div>
        </div>
                    }


                    <div class="paging">
                        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, search = Request.QueryString["search"], library = Request.QueryString["library"], category = Request.QueryString["category"] }))
                    </div>
                    }
                    else
                    {
                        <div class="paging">
                            <p><strong>No catalogue</strong> found</p>
                        </div>
                    }
